<!DOCTYPE html>
<html>
<head>
	<meta charset="utf8">
	<meta name="author" content="Tony Gaitatzis">
	<meta name="description" content="Codable Quantum Computer Simulator">
	<title>Quantum Computer Simulator</title>
	<link rel="stylesheet" href="assets/styles/screen.css" />
	<link rel="stylesheet" href="assets/fonts/swiss-cheesed/swiss_ch.css" />
	<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.3.1/css/all.css" integrity="sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU" crossorigin="anonymous">
	<script src="assets/scripts/jquery/3.3.1/jquery.min.js"></script>
	<script src="assets/scripts/mathjs/5.0.3/math.min.js"></script>
	<script src="assets/scripts/qcpu.js"></script>
	<script src="assets/scripts/qasm_parser.js"></script>
	<script src="assets/scripts/qasm_ide.js"></script>
	<script src="assets/scripts/qasm_reporter.js"></script>
	<script src="assets/scripts/qasm_runner.js"></script>
	<script src="assets/scripts/lz-string.min.js"></script>
	<script src="assets/scripts/filesystem.js"></script>
	<script src="assets/scripts/filemanager.js"></script>
	<script src="assets/scripts/qasm_file.js"></script>
	<script src="assets/scripts/simulator.js"></script>
	<script src="assets/scripts/ace-min/ace.js" charset="utf-8"></script>
	<script src="assets/scripts/data_downloader.js"></script>

	<!-- Facebook OpenGraph -->
	<meta property="og:url" content="https://backupbrain.github.io/quantum-compiler-simulator/" />
	<meta property="og:type" content="website" />
	<meta property="og:title" content="Simulate a Quantum Computer in your Browser" />
	<meta property="og:description" content="Learn to code a quantum computer with this browser-based simulator." />
	<meta property="og:image" content="https://backupbrain.github.io/quantum-compiler-simulator/assets/images/quantum-computer.jpg" />

	<!-- Twitter Cards -->
	<meta name="twitter:card" content="summary" />
	<meta name="twitter:site" content="@gaitatzis" />
	<meta name="twitter:creator" content="@gaitatzis" />
	<meta property="og:url" content="https://backupbrain.github.io/quantum-compiler-simulator/" />
	<meta property="og:title" content="Simulate a Quantum Computer in your Browser" />
	<meta property="og:description" content="Learn to code a quantum computer with this browser-based simulator." />
	<meta property="og:image" content="https://backupbrain.github.io/quantum-compiler-simulator/assets/images/quantum-computer.jpg" />

	<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-P2M7SWV');</script>
<!-- End Google Tag Manager -->

</head>
<body>
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-P2M7SWV"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->
<div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = 'https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v3.1&appId=1530095437214003&autoLogAppEvents=1';
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>
	<header>
		<section>
			<h1>Quantum Computer Simulator</h1>
			<p><a href="intro.htm">Introduction to Quantum Programming</a></p>
		</section>
	</header>

	<article id="main">
		<section>
			<div id="console">
				<div id="code_container">

			<div id="editor_container">
				<div id="editor_toolbar">
					<button id="file_new" title="New File"><i class="fas fa-file-alt"></i></button>
					<button id="file_open" title="Open File from Local Storage"><i class="fas fa-folder-open"></i></button>

					<label for="editable_filename">File: 
						<div id="editable_filename" contentEditable="true"></div>
					</label>

					<button id="file_save" title="Save File to Local Storage"><i class="fas fa-save"></i></button>

					<!--button id="file_download" title="Download Code"><i class="fas fa-file-download"></i></button-->
					<label for="simulator_num_iterations"># Runs: 
						<input type="number" id="simulator_num_iterations" value="100" size="5" />
					</label>
					<button id="simulator_run" title="Run Simulation"><i class="fas fa-play"></i></button>
				</div>
				<div id="progress_bar_container" class="start_hidden">
					<div id="progress_bar">
						<div id="progress">&nbsp;</div>
					</div>
				</div>
				<div id="code" contentEditable="true"></div>
			</div>

				</div>
				<div id="output_container">
					<div id="visible_output" class="start_hidden">
						<h2 id="output_overview_title" class="title">Output:</h2>
						<h3 id="output_overview">Summary</h3>
						<div id="log"></div>
						<h3 id="output_raw_data_overview">Raw Data</h3>
						<div id="download_raw_data_container">
							(<a id="download_raw_data" href="">Download CSV</a>)
						</div>
						<div id="output_raw_data"></div>
					</div>
				</div>
			</div>
		</section>
	</article>
	<article id="supported_functions">
		<section>
			Supported Functions:

			<table id="functions">
				<thead>
					<tr>
						<th>Function</th>
						<th>Example</th>
						<th>Description</th>
					</tr>
				</thead>
					<tbody>
					<tr>
						<td>qreg</td>
						<td>qreg q[<em>N</em>];</td>
						<td>Create <em>N</em> quantum bits</td>
					</tr>
					<tr>
						<td>creg</td>
						<td>creg c[<em>N</em>];</td>
						<td>Create <em>N</em> classical bits</td>
					</tr>
					<tr>
						<td><a href="https://en.wikipedia.org/wiki/Quantum_logic_gate#Universal_quantum_gates#Measurement">measure</a></td>
						<td>measure q[<em>q_id</em>] -> c[<em>c_id</em>];</td>
						<td>Collapse qubit <em>q_id</em> into a "1" or a "0" in classical bit <em>c_id</em></td>
					</tr>
					<tr>
						<td><a href="https://towardsdatascience.com/demystifying-quantum-gates-one-qubit-at-a-time-54404ed80640#7220">h</a></td>
						<td>h q[<em>id</em>];</td>
						<td>Put qubit <em>id</em> into superposition, or "spin" by applying a hadamard gate</td>
					</tr>
					<tr>
						<td><a href="https://towardsdatascience.com/demystifying-quantum-gates-one-qubit-at-a-time-54404ed80640#edbe">x</a></td>
						<td>x q[<em>id</em>];</td>
						<td>Invert the current value of the qubit by perform Pauli X-gate on qubit <em>id</em></td>
					</tr>
					<tr>
						<td><a href="https://towardsdatascience.com/demystifying-quantum-gates-one-qubit-at-a-time-54404ed80640#2679">y</a></td>
						<td>y q[<em>id</em>];</td>
						<td>Perform Pauli Y-gate on qubit <em>id</em></td>
					</tr>
					<tr>
						<td><a href="https://towardsdatascience.com/demystifying-quantum-gates-one-qubit-at-a-time-54404ed80640#2679">z</a></td>
						<td>z q[<em>id</em>];</td>
						<td>Perform Pauli Z-gate on qubit <em>id</em></td>
					</tr>
					<tr>
						<td><a href="https://towardsdatascience.com/demystifying-quantum-gates-one-qubit-at-a-time-54404ed80640#2679">s</a></td>
						<td>s q[<em>id</em>];</td>
						<td>Perform S-gate on qubit <em>id</em></td>
					</tr>
					<tr>
						<td><a href="https://towardsdatascience.com/demystifying-quantum-gates-one-qubit-at-a-time-54404ed80640#2679">sdg</a></td>
						<td>sdg q[<em>id</em>];</td>
						<td>Perform S&#10013;-gate on qubit <em>id</em></td>
					</tr>
					<tr>
						<td><a href="https://towardsdatascience.com/demystifying-quantum-gates-one-qubit-at-a-time-54404ed80640#2679">t</a></td>
						<td>t q[<em>id</em>];</td>
						<td>Perform T-gate on qubit <em>id</em></td>
					</tr>
					<tr>
						<td><a href="https://towardsdatascience.com/demystifying-quantum-gates-one-qubit-at-a-time-54404ed80640#2679">sdg</a></td>
						<td>tdg q[<em>id</em>];</td>
						<td>Perform T&#10013;-gate on qubit <em>id</em></td>
					</tr>
					<tr>
						<td><a href="https://en.wikipedia.org/wiki/Quantum_logic_gate#Universal_quantum_gates#Circuit_composition_and_entangled_states">cx</a></td>
						<td>cx q[<em>id1</em>], q[<em>id2</em>];</td>
						<td>Entangle quantum bit <em>id1</em> with <em>id2</em></td>
					</tr>
				</tbody>
			</table>
		</section>
	</article>
	<article>
		<section>
			<div class="fb-comments" data-href="https://backupbrain.github.io/quantum-compiler-simulator/" data-width="100%" data-numposts="20" data-colorscheme="dark">Loading Facebook Comments...</div>
		</section>
	</article>
	<footer>
		<div id="copyright">
			&copy; 2018 <a href="https://github.com/backupbrain">Tony Gaitatzis</a>, <a href="https://opensource.org/licenses/MIT">MIT License</a>
		</div>
	</footer>


<div id="file_modal_dimmer" class="modal_dimmer start_hidden">
	<div id="file_lister" class="start_hidden">
		<div class="modal_title">
			<div class="title_text">Open File</div>
			<div class="close_modal">
				<button class="close_modal"><i class="fas fa-times"></i></button>
			</div>
			<div class="clear"></div>
		</div>
		<div id="file_list_container" class="file_list_container">
			<table>
				<thead>
					<tr>
						<th>File Name</th>
						<th>Date Created</th>
						<th>Date Modified</th>
						<th>Size</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td><a href="">One</a></td><td>Date</td><td>Date</td><td>Size</td>
					</tr>
				</tbody>
			</table>
		</div>
	</div>
</div>

</body>
</html>